# -*- coding: utf-8 -*-
"""hist-stretching.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rMskzU7FE7U7BZ5JSjadZblWOkqsqcsP
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt
from google.colab.patches import cv2_imshow
# Read the image
img = cv2.imread('/content/beautiful-nature-scenery-free-photo (1).jpg', 0)
h, w = img.shape

# Display the original image
cv2_imshow(img)

# Histogram equalization
rmax = img.max()
rmin = img.min()
smax = 255
smin = 0
print("Before Histogram Stretching", rmax, rmin)

hist_stretched = np.zeros((h, w), np.uint8)

for i in range(h):
    for j in range(w):
        r = img[i][j]
        hist_stretched[i][j] = (r - rmin + smin) * ((smax - smin) / (rmax - rmin))

# Display the histogram stretched image
cv2_imshow(hist_stretched)

print("After Histogram Stretching", hist_stretched.max(), hist_stretched.min())

# Plotting histogram

def getcount(img):
    count = [0] * 256
    h, w = img.shape
    for i in range(h):
        for j in range(w):
            k = img[i][j]
            count[k] = count[k] + 1

    r = [*range(0, 256, 1)]
    return r, count

r, count = getcount(img)

plt.plot(r, count)
plt.xlabel('Pixel Intensity')
plt.ylabel('Pixel count')
plt.title('Histogram of original image')
plt.show()

r, count = getcount(hist_stretched)

plt.plot(r, count)
plt.xlabel('Pixel Intensity')
plt.ylabel('Pixel count')
plt.title('Histogram of stretched image')
plt.show()

